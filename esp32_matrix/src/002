    // Analyse FFT results
    for (int i = 2; i < (SAMPLES/2); i++){       // Don't use sample 0 and only first SAMPLES/2 are usable. Each array element represents a frequency bin and its value the amplitude.
      if (vReal[i] >= NOISE) {                    // Add a crude noise filter
        switch(NUM_BANDS){
          case 8:
            if (i<=3 )           bandValues[0]  += (int)vReal[i];
            if (i>3   && i<=6  ) bandValues[1]  += (int)vReal[i];
            if (i>6   && i<=13 ) bandValues[2]  += (int)vReal[i];
            if (i>13  && i<=27 ) bandValues[3]  += (int)vReal[i];
            if (i>27  && i<=55 ) bandValues[4]  += (int)vReal[i];
            if (i>55  && i<=112) bandValues[5]  += (int)vReal[i];
            if (i>112 && i<=229) bandValues[6]  += (int)vReal[i];
            if (i>229          ) bandValues[7]  += (int)vReal[i];
            break;

          case 16:          
            if (i<=2 )           bandValues[0]  += (int)vReal[i];
            if (i>2   && i<=3  ) bandValues[1]  += (int)vReal[i];
            if (i>3   && i<=5  ) bandValues[2]  += (int)vReal[i];
            if (i>5   && i<=7  ) bandValues[3]  += (int)vReal[i];
            if (i>7   && i<=9  ) bandValues[4]  += (int)vReal[i];
            if (i>9   && i<=13 ) bandValues[5]  += (int)vReal[i];
            if (i>13  && i<=18 ) bandValues[6]  += (int)vReal[i];
            if (i>18  && i<=25 ) bandValues[7]  += (int)vReal[i];
            if (i>25  && i<=36 ) bandValues[8]  += (int)vReal[i];
            if (i>36  && i<=50 ) bandValues[9]  += (int)vReal[i];
            if (i>50  && i<=69 ) bandValues[10] += (int)vReal[i];
            if (i>69  && i<=97 ) bandValues[11] += (int)vReal[i];
            if (i>97  && i<=135) bandValues[12] += (int)vReal[i];
            if (i>135 && i<=189) bandValues[13] += (int)vReal[i];
            if (i>189 && i<=264) bandValues[14] += (int)vReal[i];
            if (i>264          ) bandValues[15] += (int)vReal[i];
            break;

          default:
//32 bands, 280hz to 12kHz top band
      if (i <= 8 )           bandValues[0]  += (int)vReal[i];
      if (i > 8   && i <= 9  ) bandValues[1]  += (int)vReal[i];
      if (i > 9   && i <= 10  ) bandValues[2]  += (int)vReal[i];
      if (i > 10   && i <= 11 ) bandValues[3]  += (int)vReal[i];
      if (i > 11  && i <= 12 ) bandValues[4]  += (int)vReal[i];
      if (i > 12 && i <= 14 ) bandValues[5]  += (int)vReal[i];
      if (i > 14 && i <= 16) bandValues[6]  += (int)vReal[i];
      if (i > 16 && i <= 18) bandValues[7]  += (int)vReal[i];
      if (i > 18 && i <= 20) bandValues[8]  += (int)vReal[i];
      if (i > 20 && i <= 23 ) bandValues[9]  += (int)vReal[i];
      if (i > 23  && i <= 26 ) bandValues[10] += (int)vReal[i];
      if (i > 26  && i <= 29 ) bandValues[11] += (int)vReal[i];
      if (i > 29  && i <= 33) bandValues[12] += (int)vReal[i];
      if (i > 33 && i <= 37) bandValues[13] += (int)vReal[i];
      if (i > 37 && i <= 42) bandValues[14] += (int)vReal[i];
      if (i > 42   && i <= 47  ) bandValues[15]  += (int)vReal[i];
      if (i > 47   && i <= 53  ) bandValues[16]  += (int)vReal[i];
      if (i > 53   && i <= 60  ) bandValues[17]  += (int)vReal[i];
      if (i > 60   && i <= 68  ) bandValues[18]  += (int)vReal[i];
      if (i > 68   && i <= 76 ) bandValues[19]  += (int)vReal[i];
      if (i > 76  && i <= 86) bandValues[20]  += (int)vReal[i];
      if (i > 86  && i <= 97 ) bandValues[21]  += (int)vReal[i];
      if (i > 97  && i <= 110 ) bandValues[22]  += (int)vReal[i];
      if (i > 110  && i <= 124 ) bandValues[23]  += (int)vReal[i];
      if (i > 124  && i <= 140 ) bandValues[24] += (int)vReal[i];
      if (i > 140  && i <= 158 ) bandValues[25] += (int)vReal[i];
      if (i > 158  && i <= 178) bandValues[26] += (int)vReal[i];
      if (i > 178 && i <= 201) bandValues[27] += (int)vReal[i];
      if (i > 201 && i <= 227) bandValues[28] += (int)vReal[i];
      if (i > 227 &&  i <=  257) bandValues[29] += (int)vReal[i];
      if (i > 257 &&  i <=  290) bandValues[30] += (int)vReal[i];
      if (i > 290               ) bandValues[31] += (int)vReal[i];

          /*
            if (i<=2 )           bandValues[0]  += (int)vReal[i];
            if (i>2   && i<=3  ) bandValues[1]  += (int)vReal[i];
            if (i>3   && i<=4  ) bandValues[2]  += (int)vReal[i];
            if (i>4   && i<=5  ) bandValues[3]  += (int)vReal[i];
            if (i>5   && i<=6  ) bandValues[4]  += (int)vReal[i];
            if (i>6   && i<=7  ) bandValues[5]  += (int)vReal[i];
            if (i>7   && i<=8  ) bandValues[6]  += (int)vReal[i];
            if (i>8   && i<=9  ) bandValues[7]  += (int)vReal[i];
            if (i>9   && i<=11  ) bandValues[8] += (int)vReal[i];
            if (i>11  && i<=13 ) bandValues[9]  += (int)vReal[i];
            if (i>13  && i<=16 ) bandValues[10] += (int)vReal[i];
            if (i>16  && i<=18 ) bandValues[11] += (int)vReal[i];
            if (i>18  && i<=22 ) bandValues[12] += (int)vReal[i];
            if (i>22  && i<=25 ) bandValues[13] += (int)vReal[i];
            if (i>25  && i<=30 ) bandValues[14] += (int)vReal[i];
            if (i>30  && i<=36 ) bandValues[15] += (int)vReal[i];
            if (i>36  && i<=43 ) bandValues[16] += (int)vReal[i];
            if (i>43  && i<=50 ) bandValues[17] += (int)vReal[i];
            if (i>50  && i<=59 ) bandValues[18] += (int)vReal[i];
            if (i>59  && i<=69 ) bandValues[19] += (int)vReal[i];
            if (i>69  && i<=80 ) bandValues[20] += (int)vReal[i];
            if (i>80  && i<=97 ) bandValues[21] += (int)vReal[i];
            if (i>97  && i<=114) bandValues[22] += (int)vReal[i];
            if (i>114 && i<=135) bandValues[23] += (int)vReal[i];
            if (i>135 && i<=160) bandValues[24] += (int)vReal[i];
            if (i>160 && i<=189) bandValues[25] += (int)vReal[i];
            if (i>189 && i<=225) bandValues[26] += (int)vReal[i];
            if (i>225 && i<=264) bandValues[27] += (int)vReal[i];
            if (i>264 && i<=330) bandValues[28] += (int)vReal[i];
            if (i>330 && i<=390) bandValues[29] += (int)vReal[i];
            if (i>390 && i<=450) bandValues[30] += (int)vReal[i];
            if (i>450          ) bandValues[31] += (int)vReal[i]; */
            break;
        }
      }
    }